/* Generated file - DO NOT EDIT! */
/* Generated by utils/src/sep_rpc_gen/sep_rpc_gen.py@2451 at 2012-09-20 11:57:50.779976 */
/*******************************************************************
* (c) Copyright 2011-2012 Discretix Technologies Ltd.              *
* This file is licensed under the terms provided in the file       *
* libcc54/LICENSE in this directory or a parent directory          *
********************************************************************/

/* \file crys_rnd_seprpc.h
 * SeP-RPC header file for CrysRnd API */

#ifndef __CRYS_RND_SEPRPC_H__
#define __CRYS_RND_SEPRPC_H__

#define SEPRPC_AGENT_ID_CrysRnd 7

#include "crys_rnd_error.h"
#include "crys_rnd.h"
#include "sep_rpc.h"
#include "dx_pal_compiler.h"


/************ CRYS_RND_Instantiation ***************/
#define SEPRPC_FUNC_ID_CRYS_RND_Instantiation 1
/*
CRYSError_t CRYS_RND_Instantiation(
	CRYS_RND_EntropyEstimatData_t *entrEstimBuff_ptr)
*/

#define SEPRPC_MEMREF_NUM_CRYS_RND_Instantiation 0
#if SEPRPC_MEMREF_NUM_CRYS_RND_Instantiation > SEP_RPC_MAX_MEMREF_PER_FUNC
#error SEPRPC_MEMREF_NUM_CRYS_RND_Instantiation is more than SEP_RPC_MAX_MEMREF_PER_FUNC
#endif

typedef struct SepRpc_CRYS_RND_InstantiationParams {
	uint32_t num_of_memrefs; /* Number of elements in the memRef array */
	/* Input/Output */
	CRYS_RND_EntropyEstimatData_t __entrEstimBuff_ptr;
	DxUint8_t __entrEstimBuff_ptr_null_flag;
	CRYSError_t _funcRetCode;
} SepRpc_CRYS_RND_InstantiationParams_s;



/************ CRYS_RND_Reseeding ***************/
#define SEPRPC_FUNC_ID_CRYS_RND_Reseeding 2
/*
CRYSError_t CRYS_RND_Reseeding(
	CRYS_RND_EntropyEstimatData_t *entrEstimBuff_ptr)
*/

#define SEPRPC_MEMREF_NUM_CRYS_RND_Reseeding 0
#if SEPRPC_MEMREF_NUM_CRYS_RND_Reseeding > SEP_RPC_MAX_MEMREF_PER_FUNC
#error SEPRPC_MEMREF_NUM_CRYS_RND_Reseeding is more than SEP_RPC_MAX_MEMREF_PER_FUNC
#endif

typedef struct SepRpc_CRYS_RND_ReseedingParams {
	uint32_t num_of_memrefs; /* Number of elements in the memRef array */
	/* Input/Output */
	CRYS_RND_EntropyEstimatData_t __entrEstimBuff_ptr;
	DxUint8_t __entrEstimBuff_ptr_null_flag;
	CRYSError_t _funcRetCode;
} SepRpc_CRYS_RND_ReseedingParams_s;



/************ CRYS_RND_GenerateVector ***************/
#define SEPRPC_FUNC_ID_CRYS_RND_GenerateVector 3
/*
CRYSError_t CRYS_RND_GenerateVector(
	DxUint16_t RndSize,
	DxUint8_t Output_ptr[])
*/

#define SEPRPC_MEMREF_NUM_CRYS_RND_GenerateVector 0
#if SEPRPC_MEMREF_NUM_CRYS_RND_GenerateVector > SEP_RPC_MAX_MEMREF_PER_FUNC
#error SEPRPC_MEMREF_NUM_CRYS_RND_GenerateVector is more than SEP_RPC_MAX_MEMREF_PER_FUNC
#endif

typedef struct SepRpc_CRYS_RND_GenerateVectorParams {
	uint32_t num_of_memrefs; /* Number of elements in the memRef array */
	/* Input */
	/*le16*/DxUint16_t RndSize;
	/* Output */
	DxUint8_t Output_ptr[CRYS_RND_MAX_SIZE_OF_OUTPUT_BYTES];
	DxUint8_t Output_ptr_null_flag;
	CRYSError_t _funcRetCode;
} SepRpc_CRYS_RND_GenerateVectorParams_s;



/************ CRYS_RND_GenerateVectorInRange ***************/
#define SEPRPC_FUNC_ID_CRYS_RND_GenerateVectorInRange 4
/*
CRYSError_t CRYS_RND_GenerateVectorInRange(
	DxUint32_t RndSizeInBits,
	DxUint8_t MaxVect_ptr[],
	DxUint8_t RndVect_ptr[])
*/

#define SEPRPC_MEMREF_NUM_CRYS_RND_GenerateVectorInRange 0
#if SEPRPC_MEMREF_NUM_CRYS_RND_GenerateVectorInRange > SEP_RPC_MAX_MEMREF_PER_FUNC
#error SEPRPC_MEMREF_NUM_CRYS_RND_GenerateVectorInRange is more than SEP_RPC_MAX_MEMREF_PER_FUNC
#endif

typedef struct SepRpc_CRYS_RND_GenerateVectorInRangeParams {
	uint32_t num_of_memrefs; /* Number of elements in the memRef array */
	/* Input */
	/*le32*/DxUint32_t RndSizeInBits;
	DxUint8_t MaxVect_ptr[CRYS_RND_MAX_SIZE_OF_OUTPUT_BYTES];
	DxUint8_t MaxVect_ptr_null_flag;
	/* Output */
	DxUint8_t RndVect_ptr[CRYS_RND_MAX_SIZE_OF_OUTPUT_BYTES];
	DxUint8_t RndVect_ptr_null_flag;
	CRYSError_t _funcRetCode;
} SepRpc_CRYS_RND_GenerateVectorInRangeParams_s;



/************ CRYS_RND_AddAdditionalInput ***************/
#define SEPRPC_FUNC_ID_CRYS_RND_AddAdditionalInput 5
/*
CRYSError_t CRYS_RND_AddAdditionalInput(
	DxUint8_t AdditonalInput_ptr[],
	DxUint16_t AdditonalInputSize)
*/

#define SEPRPC_MEMREF_NUM_CRYS_RND_AddAdditionalInput 0
#if SEPRPC_MEMREF_NUM_CRYS_RND_AddAdditionalInput > SEP_RPC_MAX_MEMREF_PER_FUNC
#error SEPRPC_MEMREF_NUM_CRYS_RND_AddAdditionalInput is more than SEP_RPC_MAX_MEMREF_PER_FUNC
#endif

typedef struct SepRpc_CRYS_RND_AddAdditionalInputParams {
	uint32_t num_of_memrefs; /* Number of elements in the memRef array */
	/* Input */
	DxUint8_t AdditonalInput_ptr[32];
	DxUint8_t AdditonalInput_ptr_null_flag;
	/*le16*/DxUint16_t AdditonalInputSize;
	CRYSError_t _funcRetCode;
} SepRpc_CRYS_RND_AddAdditionalInputParams_s;



/************ CRYS_RND_UnInstantiation ***************/
#define SEPRPC_FUNC_ID_CRYS_RND_UnInstantiation 6
/*
CRYSError_t CRYS_RND_UnInstantiation(
)
*/

#define SEPRPC_MEMREF_NUM_CRYS_RND_UnInstantiation 0
#if SEPRPC_MEMREF_NUM_CRYS_RND_UnInstantiation > SEP_RPC_MAX_MEMREF_PER_FUNC
#error SEPRPC_MEMREF_NUM_CRYS_RND_UnInstantiation is more than SEP_RPC_MAX_MEMREF_PER_FUNC
#endif

typedef struct SepRpc_CRYS_RND_UnInstantiationParams {
	uint32_t num_of_memrefs; /* Number of elements in the memRef array */
	CRYSError_t _funcRetCode;
} SepRpc_CRYS_RND_UnInstantiationParams_s;


#endif /*__CRYS_RND_SEPRPC_H__*/
